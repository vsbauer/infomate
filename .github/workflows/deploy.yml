name: Deploy master

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: docker login ghcr.io -u $GITHUB_ACTOR -p ${{ secrets.GHCR_TOKEN }}
      - run: docker build -t ghcr.io/$GITHUB_ACTOR/infomate:latest -t ghcr.io/$GITHUB_ACTOR/infomate:$GITHUB_SHA .
      - run: docker image push ghcr.io/$GITHUB_ACTOR/infomate:$GITHUB_SHA
      - run: docker image push ghcr.io/$GITHUB_ACTOR/infomate:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    env:
      SSH_KEY_PATH: /tmp/ssh_key
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Make envfile
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "APP_HOST=${{ secrets.APP_HOST }}" >> .env
          echo "MEDIA_UPLOAD_CODE=${{ secrets.MEDIA_UPLOAD_CODE }}" >> .env
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
          echo "GITHUB_SHA=${GITHUB_SHA}" >> .env

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.PRODUCTION_SSH_KEY }}" | base64 --decode > ${{ env.SSH_KEY_PATH }}
          chmod 600 ${{ env.SSH_KEY_PATH }}

      - name: Copy Project Files
        run: |
          scp -o StrictHostKeyChecking=no -i "${SSH_KEY_PATH}" -r $(pwd)/* "${{ secrets.PRODUCTION_SSH_USERNAME }}"@"${{ secrets.PRODUCTION_SSH_HOST }}":/home/infomate.club
          scp -o StrictHostKeyChecking=no -i "${SSH_KEY_PATH}" .env "${{ secrets.PRODUCTION_SSH_USERNAME }}"@"${{ secrets.PRODUCTION_SSH_HOST }}":/home/infomate.club/.env
          scp -o StrictHostKeyChecking=no -i "${SSH_KEY_PATH}" docker-compose.production.yml "${{ secrets.PRODUCTION_SSH_USERNAME }}"@"${{ secrets.PRODUCTION_SSH_HOST }}":/home/infomate.club/docker-compose.production.yml

      - name: Deploy and Prune
        run: |
          ssh -i "${SSH_KEY_PATH}" "${{ secrets.PRODUCTION_SSH_USERNAME }}"@"${{ secrets.PRODUCTION_SSH_HOST }}" "cd /home/infomate.club && docker login ghcr.io -u $GITHUB_ACTOR -p ${{ secrets.GHCR_TOKEN }} && docker pull ghcr.io/$GITHUB_ACTOR/infomate:${GITHUB_SHA} && docker-compose -f docker-compose.production.yml --env-file=.env up -d && docker system prune --all --force"
